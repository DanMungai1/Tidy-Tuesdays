top_n(5,n) %>%
lst()
View(top_genus)
top5 <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus == top_genus)
top5 <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus %in% top_genus)
sf_trees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv')
top_genus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus != "Tree(s)") %>%
count(Genus) %>%
arrange(desc(n)) %>%
top_n(5,n) %>%
lst()
top5 <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus %in% top_genus)
View(top5)
top5 <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus %in% top_genus$Genus)
sf_trees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv')
top5 <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus %in% top_genus$Genus)
top5 <- sf_trees %>%
mutate(Genus = word(species, 1))
top5 <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
mutate(Genus = filter(Genus %in% top_genus$Genus))
top5 <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
mutate(Genus = filter(Genus %in% top_genus))
top5 <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus %in% top_genus)
sf_trees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv')
top_genus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus != "Tree(s)") %>%
count(Genus) %>%
arrange(desc(n)) %>%
top_n(5,n)
View(top_genus)
View(top_genus)
View(top_genus)
top_genus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus != "Tree(s)") %>%
count(Genus) %>%
arrange(desc(n)) %>%
top_n(5,n)
top5 <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus == "Prunus" | Genus == "Platanus" |Genus == "	Ficus" | 	Genus == "Pittosporum" | Genus == "Tristaniopsis")
Prunus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus == "Prunus" )
Prunus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus == "Prunus" )
Platanus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Platanus")
library(tidyverse)
library(rgdal)
library(lubridate)
library(osmdata)
library(sf)
library(ggmap)
sf_trees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv')
top_genus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus != "Tree(s)") %>%
count(Genus) %>%
arrange(desc(n)) %>%
top_n(5,n)
Prunus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus == "Prunus" )
Platanus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Platanus")
sf_map <- get_map(getbb("San Francisco"), maptype = "satellite", scale = "10", force=TRUE)
sf_plot <- ggmap(sf_map) + stat_density_2d(data = sf_trees, aes(x =longitude, y =latitude, fill=stat(nlevel)), geom = "polygon", n=100, bins = 30) + xlim(-122.55,-122.35) + ylim(37.75,37.82) + scale_fill_viridis_c(option = "plasma")
sf_plot
sf_map <- get_map(getbb("San Francisco"), maptype = "satellite", scale = "10", force=TRUE)
sf_plot <- ggmap(sf_map) + geom_point(data = Prunus, aes(x =longitude, y =latitude), size=0.8, alpha = 0.4) + xlim(-122.55,-122.35) + ylim(37.75,37.82)
sf_plot
sf_map <- get_map(getbb("San Francisco"), maptype = "satellite", scale = "10", force=TRUE)
sf_plot <- ggmap(sf_map) + geom_point(data = Prunus, aes(x =longitude, y =latitude), size=1.1, alpha = 0.6, color = red) + xlim(-122.55,-122.35) + ylim(37.75,37.82)
sf_map <- get_map(getbb("San Francisco"), maptype = "satellite", scale = "10", force=TRUE)
sf_plot <- ggmap(sf_map) + geom_point(data = Prunus, aes(x =longitude, y =latitude), size=1.1, alpha = 0.6, color = "red") + xlim(-122.55,-122.35) + ylim(37.75,37.82)
sf_plot
View(Platanus)
library(tidyverse)
library(rgdal)
library(lubridate)
library(osmdata)
library(sf)
library(ggmap)
sf_trees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv')
top_genus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus != "Tree(s)") %>%
count(Genus) %>%
arrange(desc(n)) %>%
top_n(5,n)
Prunus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus == "Prunus" )
Platanus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Platanus")
View(Prunus)
count(Prunus)
Sys.time()
Sys.Date()
min(Prunus$date, na.rm=TRUE)
Sys.Date() - min(Prunus$date, na.rm=TRUE)
format(Sys.Date() - min(Prunus$date, na.rm=TRUE), "years")
format(Sys.Date() - min(Prunus$date, na.rm=TRUE), "%Y")
format(Sys.Date() - min(Prunus$date, na.rm=TRUE), "%B %Y")
(Sys.Date() - min(Prunus$date, na.rm=TRUE))/365
format(Sys.Date() - min(Prunus$date, na.rm=TRUE))/365, digits=2)
Sys.Date() - min(Prunus$date, na.rm=TRUE))/365
format((Sys.Date() - min(Prunus$date, na.rm=TRUE))/365, digits=2)
(Sys.Date() - min(Prunus$date, na.rm=TRUE))/365
install.packages("prettydoc")
library(tidyverse)
library(rgdal)
library(lubridate)
library(osmdata)
library(sf)
library(ggmap)
library(prettydoc)
sf_trees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv')
top_genus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus != "Tree(s)") %>%
count(Genus) %>%
arrange(desc(n)) %>%
top_n(5,n)
Prunus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus == "Prunus" )
Platanus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Platanus")
sf_map <- get_map(location = c(left = -122.5501, bottom = 37.6993, right = -122.3367, top = 37.8116),
zoom = 14 , color = "bw")
sf_plot <- ggmap(sf_map) + geom_point(data = Prunus, aes(x =longitude, y =latitude), size=1.1, alpha = 0.6, color = "red") + xlim(-122.55,-122.35) + ylim(37.75,37.82)
sf_plot
sf_map <- get_map(location = c(left = -122.5501, bottom = 37.6993, right = -122.3367, top = 37.8116),
zoom = 14 , color = "bw")
sf_plot <- ggmap(sf_map) + geom_point(data = Prunus, aes(x =longitude, y =latitude), size=1.1, alpha = 0.45, color = "red") + theme(axis.title=element_blank(),axis.text=element_blank(),axis.ticks=element_blank())
sf_plot
r format((Sys.Date() - min(Prunus$date, na.rm=TRUE))/365, digits=2)
format((Sys.Date() - min(Prunus$date, na.rm=TRUE))/365, digits=2)
format((Sys.Date() - min(Prunus$date, na.rm=TRUE))/365, digits=4)
format((Sys.Date() - min(Prunus$date, na.rm=TRUE))/365, digits=4), '%Y')
(Sys.Date() - min(Prunus$date, na.rm=TRUE))/365, digits=4)
(Sys.Date() - min(Prunus$date, na.rm=TRUE))/365)
Sys.Date() - min(Prunus$date, na.rm=TRUE)/365
Sys.Date() - min(Prunus$date, na.rm=TRUE)
format(Sys.Date() - min(Prunus$date, na.rm=TRUE), '%B %Y')
format((Sys.Date() - min(Prunus$date, na.rm=TRUE)), '%B %Y')
min(Prunus$date, na.rm=TRUE)
(Sys.Date() - min(Prunus$date, na.rm=TRUE))/365
year(Sys.Date() - min(Prunus$date, na.rm=TRUE))
as.double(Sys.Date() - min(Prunus$date, na.rm=TRUE))/365
as.double(Sys.Date() - min(Prunus$date, na.rm=TRUE))/365, digits=3)
(as.double(Sys.Date() - min(Prunus$date, na.rm=TRUE))/365), digits=3)
format(as.double(Sys.Date() - min(Prunus$date, na.rm=TRUE))/365), digits=3)
printf ("%.2f", as.double(Sys.Date() - min(Prunus$date, na.rm=TRUE))/365)
sprintf ("%.2f", as.double(Sys.Date() - min(Prunus$date, na.rm=TRUE))/365)
sprintf ("%.1f", as.double(Sys.Date() - min(Prunus$date, na.rm=TRUE))/365)
library(tidyverse)
library(rgdal)
library(lubridate)
library(osmdata)
library(sf)
library(ggmap)
library(prettydoc)
library(plotly)
install.packages("plotly")
library(tidyverse)
library(rgdal)
library(lubridate)
library(osmdata)
library(sf)
library(ggmap)
library(prettydoc)
library(plotly)
sf_trees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv')
top_genus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus != "Tree(s)") %>%
count(Genus) %>%
arrange(desc(n)) %>%
top_n(5,n)
Prunus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus == "Prunus" )
Platanus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Platanus")
sf_map <- get_map(location = c(left = -122.5501, bottom = 37.6993, right = -122.3367, top = 37.8116),
zoom = 14 , color = "color")
sf_plot <- ggmap(sf_map) + geom_point(data = Prunus, aes(x =longitude, y =latitude), size=1.1, alpha = 0.45, color = "red") + theme(axis.title=element_blank(),axis.text=element_blank(),axis.ticks=element_blank())
sf_plot
ggplotly(sf_plot)
View(Prunus)
sf_map <- get_map(location = c(left = -122.5501, bottom = 37.6993, right = -122.3367, top = 37.8116),
zoom = 14 , color = "color")
sf_plot <- ggmap(sf_map) + geom_point(data = Prunus, aes(x =longitude, y =latitude, label=date, label=address), size=1.1, alpha = 0.45, color = "red") + theme(axis.title=element_blank(),axis.text=element_blank(),axis.ticks=element_blank())
ggplotly(sf_plot, height = 350, width=600)
library(rmarkdown)
install.packages("rmarkdown")
library(pander)
devtools::install_github('rstudio/rmarkdown')
library(Rcpp)
remove.packages("Rcpp", lib="~/R/win-library/3.6")
devtools::install_github('rstudio/rmarkdown')
library(tidyverse)
library(rgdal)
library(lubridate)
library(osmdata)
library(sf)
library(ggmap)
library(prettydoc)
library(leaflet)
sf_trees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv')
top_genus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus != "Tree(s)") %>%
count(Genus) %>%
arrange(desc(n)) %>%
top_n(5,n)
Prunus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus == "Prunus" )
Platanus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Platanus")
Ficus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Ficus")
Pittosporum <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Pittosporum")
Tristaniopsis <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Tristaniopsis")
plantanus_map <- leaflet() %>%
addProviderTiles(providers$Stamen.Terrain) %>%
addCircleMarkers(data=Platanus,
stroke = FALSE, fillOpacity = 0.5, radius=4, color = "red",
popup=~paste("<strong>Species:</strong>",species,
"<br>",
"<strong>Date Planted:</strong>",date,
"<br>",
"<strong>DBH:</strong>",dbh))
plantanus_map
library(tidyverse)
library(rgdal)
library(lubridate)
library(osmdata)
library(sf)
library(ggmap)
library(prettydoc)
library(plotly)
library(widgetframe)
sf_trees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv')
top_genus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus != "Tree(s)") %>%
count(Genus) %>%
arrange(desc(n)) %>%
top_n(5,n)
Prunus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus == "Prunus" )
Platanus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Platanus")
Ficus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Ficus")
Pittosporum <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Pittosporum")
Tristaniopsis <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Tristaniopsis")
sf_map <- get_map(location = c(left = -122.5601, bottom = 37.6993, right = -122.3167, top = 37.8116), zoom = 14 , color = "color")
sf_plot <- ggmap(sf_map) +
geom_point(data = Platanus, aes(x =longitude, y =latitude,label = species, label1=address, label2 = dbh, label3 = date), size=1.1, alpha = 0.45, shape = 1, color = "purple") +
theme(axis.title=element_blank(),axis.text=element_blank(),axis.ticks=element_blank())
ggplotly(sf_plot, height = 450, width=900, tooltip = c("species","address", "dbh", "date"))
library(tidyverse)
library(rgdal)
library(lubridate)
library(osmdata)
library(sf)
library(ggmap)
library(prettydoc)
library(leaflet)
sf_trees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv')
top_genus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus != "Tree(s)") %>%
count(Genus) %>%
arrange(desc(n)) %>%
top_n(5,n)
Prunus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus == "Prunus" )
Platanus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Platanus") %>%
filter(longitude >= 37.70) #filter out point near santa cruz
Ficus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Ficus")
Pittosporum <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Pittosporum")
Tristaniopsis <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Tristaniopsis")
prunus_map <- leaflet() %>%
addProviderTiles(providers$Stamen.Terrain) %>%
addCircleMarkers(data=Prunus,
stroke = FALSE, fillOpacity = 0.5, radius=3,
popup=~paste("<strong>Species:</strong>",species,
"<br>",
"<strong>Date Planted:</strong>",date,
"<br>",
"<strong>DBH:</strong>",dbh))
prunus_map
plantanus_map <- leaflet() %>%
addProviderTiles(providers$Stamen.Terrain) %>%
addCircleMarkers(data=Platanus,
stroke = FALSE, fillOpacity = 0.5, radius=3, color = "red",
popup=~paste("<strong>Species:</strong>",species,
"<br>",
"<strong>Date Planted:</strong>",date,
"<br>",
"<strong>DBH:</strong>",dbh))
plantanus_map
View(Prunus)
library(tidyverse)
library(rgdal)
library(lubridate)
library(osmdata)
library(sf)
library(ggmap)
library(prettydoc)
library(leaflet)
sf_trees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv')
top_genus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus != "Tree(s)") %>%
count(Genus) %>%
arrange(desc(n)) %>%
top_n(5,n)
Prunus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus == "Prunus" )
Platanus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Platanus")
Ficus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Ficus")
Pittosporum <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Pittosporum")
Tristaniopsis <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Tristaniopsis")
View(Platanus)
library(tidyverse)
library(rgdal)
library(lubridate)
library(osmdata)
library(sf)
library(ggmap)
library(prettydoc)
library(leaflet)
sf_trees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv')
top_genus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus != "Tree(s)") %>%
count(Genus) %>%
arrange(desc(n)) %>%
top_n(5,n)
Prunus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus == "Prunus" )
Platanus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus == "Platanus") %>%
filter(tree_id != 27884) #bad longitude
Ficus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Ficus")
Pittosporum <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Pittosporum")
Tristaniopsis <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Tristaniopsis")
View(Platanus)
View(top_genus)
library(tidyverse)
library(rgdal)
library(lubridate)
library(osmdata)
library(sf)
library(ggmap)
library(prettydoc)
library(leaflet)
sf_trees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv')
top_genus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus != "Tree(s)") %>%
count(Genus) %>%
arrange(desc(n)) %>%
top_n(5,n)
Prunus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus == "Prunus" )
Platanus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus == "Platanus") %>%
filter(tree_id != 27884) #bad longitude
Ficus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Ficus")
Pittosporum <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Pittosporum")
Tristaniopsis <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Tristaniopsis")
fruit_pic <- ("https://upload.wikimedia.org/wikipedia/commons/1/10/Cerisier_du_Japon_Prunus_serrulata.jpg") #Photo: Myrabella / Wikimedia Commons
sycamore_pic <- ("https://upload.wikimedia.org/wikipedia/commons/4/42/Hethert_tree.jpg") #Photo: Maatpublishing [CC BY-SA]
fruit_pic <- ("https://upload.wikimedia.org/wikipedia/commons/1/10/Cerisier_du_Japon_Prunus_serrulata.jpg") #Photo: Myrabella / Wikimedia Commons
fruit pic
fruit_pic <- ("https://upload.wikimedia.org/wikipedia/commons/1/10/Cerisier_du_Japon_Prunus_serrulata.jpg") #Photo: Myrabella / Wikimedia Commons
fruit_pic
fruit_pic <- ("https://upload.wikimedia.org/wikipedia/commons/1/10/Cerisier_du_Japon_Prunus_serrulata.jpg") #Photo: Myrabella / Wikimedia Commons
fruit_pic
fruit_pic <- ("https://upload.wikimedia.org/wikipedia/commons/1/10/Cerisier_du_Japon_Prunus_serrulata.jpg") #Photo: Myrabella / Wikimedia Commons
fruit_pic
fruit_pic <- "https://upload.wikimedia.org/wikipedia/commons/1/10/Cerisier_du_Japon_Prunus_serrulata.jpg" #Photo: Myrabella / Wikimedia Commons
fruit_pic
fruit_pic <- "https://upload.wikimedia.org/wikipedia/commons/1/10/Cerisier_du_Japon_Prunus_serrulata.jpg" #Photo: Myrabella / Wikimedia Commons
fruit_pic
fruit_pic <- "https://upload.wikimedia.org/wikipedia/commons/1/10/Cerisier_du_Japon_Prunus_serrulata.jpg" #Photo: Myrabella / Wikimedia Commons
fruit_pic
fruit_pic <- "https://upload.wikimedia.org/wikipedia/commons/1/10/Cerisier_du_Japon_Prunus_serrulata.jpg" #Photo: Myrabella / Wikimedia Commons
![](fruit_pic)
fruit_pic <- "https://upload.wikimedia.org/wikipedia/commons/1/10/Cerisier_du_Japon_Prunus_serrulata.jpg" #Photo: Myrabella / Wikimedia Commons
!fruit_pic
fruit_pic <- "https://upload.wikimedia.org/wikipedia/commons/1/10/Cerisier_du_Japon_Prunus_serrulata.jpg" #Photo: Myrabella / Wikimedia Commons
!fruit_pic
fruit_pic <- "https://upload.wikimedia.org/wikipedia/commons/1/10/Cerisier_du_Japon_Prunus_serrulata.jpg" #Photo: Myrabella / Wikimedia Commons
fruit_pic
include_graphics("https://upload.wikimedia.org/wikipedia/commons/1/10/Cerisier_du_Japon_Prunus_serrulata.jpg")
include_graphics("https://upload.wikimedia.org/wikipedia/commons/1/10/Cerisier_du_Japon_Prunus_serrulata.jpg")
include_graphics("https://upload.wikimedia.org/wikipedia/commons/1/10/Cerisier_du_Japon_Prunus_serrulata.jpg")
library(tidyverse)
library(rgdal)
library(lubridate)
library(osmdata)
library(sf)
library(ggmap)
library(prettydoc)
library(leaflet)
library(knitr)
sf_trees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv')
top_genus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus != "Tree(s)") %>%
count(Genus) %>%
arrange(desc(n)) %>%
top_n(5,n)
Prunus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus == "Prunus" )
Platanus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter(Genus == "Platanus") %>%
filter(tree_id != 27884) #bad longitude
Ficus <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Ficus")
Pittosporum <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Pittosporum")
Tristaniopsis <- sf_trees %>%
mutate(Genus = word(species, 1)) %>%
filter( Genus == "Tristaniopsis")
include_graphics("https://upload.wikimedia.org/wikipedia/commons/1/10/Cerisier_du_Japon_Prunus_serrulata.jpg")
include_graphics("https://upload.wikimedia.org/wikipedia/commons/1/10/Cerisier_du_Japon_Prunus_serrulata.jpg")
include_graphics("https://upload.wikimedia.org/wikipedia/commons/8/84/Starr_031108-0130_Ficus_lyrata.jpg")
